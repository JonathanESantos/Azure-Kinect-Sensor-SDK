<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structk4a__capture__t" kind="class" language="C++" prot="public">
    <compoundname>k4a_capture_t</compoundname>
    <includes refid="k4a_8h" local="no">k4a/k4a.h</includes>
      <sectiondef kind="related">
      <memberdef kind="function" id="group___functions_gaffbf32b4d014c31826d52de1c0c932cc_1gaffbf32b4d014c31826d52de1c0c932cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___enumerations_ga4b419a99aa2220b076a4520dc2afd1e5_1ga4b419a99aa2220b076a4520dc2afd1e5" kindref="member">k4a_result_t</ref></type>
        <definition>k4a_result_t k4a_capture_create</definition>
        <argsstring>(k4a_capture_t *capture_handle)</argsstring>
        <name>k4a_capture_create</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> *</type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Create an empty capture object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location to store the handle.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function to create a <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> handle for a new capture. Release it with <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref>.</para>
</simplesect>
The new capture is created with a reference count of 1.</para>
<para><simplesect kind="return"><para>Returns <ref refid="group___enumerations_ga4b419a99aa2220b076a4520dc2afd1e5_1gga4b419a99aa2220b076a4520dc2afd1e5a66d48bea75b8ddf1c568a824469da9d3" kindref="member">K4A_RESULT_SUCCEEDED</ref> on success. Errors are indicated with <ref refid="group___enumerations_ga4b419a99aa2220b076a4520dc2afd1e5_1gga4b419a99aa2220b076a4520dc2afd1e5aeddb129210ca398349f6b7323f1cfbed" kindref="member">K4A_RESULT_FAILED</ref> and error specific data can be found in the log.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="335" column="15" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="335" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_release</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_release</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Release a capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture to release.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function when finished using the capture.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="355" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="355" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_gab15293d2e452470fff8d5109472c7350_1gab15293d2e452470fff8d5109472c7350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_reference</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_reference</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Add a reference to a capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture to add a reference to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function to add an additional reference to a capture. This reference must be removed with <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref>.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="376" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="376" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga683e440b5f22215a2de58d7fa140488c_1ga683e440b5f22215a2de58d7fa140488c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
        <definition>k4a_image_t k4a_capture_get_color_image</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_get_color_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Get the color image associated with the given capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function to access the color image part of this capture. Release the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> with <ref refid="group___functions_ga27c81863b13fafc3934a32935a014e9f_1ga27c81863b13fafc3934a32935a014e9f" kindref="member">k4a_image_release()</ref>;</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="397" column="14" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="397" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_gafa03513da96bf6b8c254fc11a04ee6d6_1gafa03513da96bf6b8c254fc11a04ee6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
        <definition>k4a_image_t k4a_capture_get_depth_image</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_get_depth_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Get the depth image associated with the given capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function to access the depth image part of this capture. Release the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> with <ref refid="group___functions_ga27c81863b13fafc3934a32935a014e9f_1ga27c81863b13fafc3934a32935a014e9f" kindref="member">k4a_image_release()</ref>;</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="418" column="14" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="418" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga1531c3fa76a7c174b8f2eab24de91794_1ga1531c3fa76a7c174b8f2eab24de91794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
        <definition>k4a_image_t k4a_capture_get_ir_image</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_get_ir_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Get the IR image associated with the given capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Call this function to access the IR image part of this capture. Release the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> with <ref refid="group___functions_ga27c81863b13fafc3934a32935a014e9f_1ga27c81863b13fafc3934a32935a014e9f" kindref="member">k4a_image_release()</ref>;</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="439" column="14" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="439" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga28824350a175d8eeba7c7a7d2753c2cf_1ga28824350a175d8eeba7c7a7d2753c2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_set_color_image</definition>
        <argsstring>(k4a_capture_t capture_handle, k4a_image_t image_handle)</argsstring>
        <name>k4a_capture_set_color_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <param>
          <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
          <declname>image_handle</declname>
        </param>
        <briefdescription>
<para>Set or add a color image to the associated capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle to hold the image.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Image handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>When a <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> is added to a <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref>, the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically add a reference to the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>If there is already a color image contained in the capture, the existing image will be dereferenced and replaced with the new image.</para>
</simplesect>
<simplesect kind="remark"><para>To remove a color image to the capture without adding a new image, this function can be called with a NULL image_handle.</para>
</simplesect>
<simplesect kind="remark"><para>Any <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> contained in this <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically be dereferenced when all references to the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> are released with <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref>.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="475" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="475" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_gad28b520b45096dd430d2a14b6052ebae_1gad28b520b45096dd430d2a14b6052ebae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_set_depth_image</definition>
        <argsstring>(k4a_capture_t capture_handle, k4a_image_t image_handle)</argsstring>
        <name>k4a_capture_set_depth_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <param>
          <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
          <declname>image_handle</declname>
        </param>
        <briefdescription>
<para>Set or add a depth image to the associated capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle to hold the image.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Image handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>When a <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> is added to a <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref>, the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically add a reference to the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>If there is already an image depth image contained in the capture, the existing image will be dereferenced and replaced with the new image.</para>
</simplesect>
<simplesect kind="remark"><para>To remove a depth image to the capture without adding a new image, this function can be called with a NULL image_handle.</para>
</simplesect>
<simplesect kind="remark"><para>Any <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> contained in this <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically be dereferenced when all references to the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> are released with <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref>.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="511" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="511" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga473abb7de733bf5f53329f3b1a86594c_1ga473abb7de733bf5f53329f3b1a86594c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_set_ir_image</definition>
        <argsstring>(k4a_capture_t capture_handle, k4a_image_t image_handle)</argsstring>
        <name>k4a_capture_set_ir_image</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <param>
          <type><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></type>
          <declname>image_handle</declname>
        </param>
        <briefdescription>
<para>Set or add an IR image to the associated capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle to hold the image.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Image handle containing the image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>When a <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> is added to a <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref>, the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically add a reference to the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>If there is already an IR image contained in the capture, the existing image will be dereferenced and replaced with the new image.</para>
</simplesect>
<simplesect kind="remark"><para>To remove a IR image to the capture without adding a new image, this function can be called with a NULL image_handle.</para>
</simplesect>
<simplesect kind="remark"><para>Any <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> contained in this <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will automatically be dereferenced when all references to the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> are released with <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref>.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="546" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="546" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_ga262b1df45e7b33dd4ea95e81d52a3a9c_1ga262b1df45e7b33dd4ea95e81d52a3a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k4a_capture_set_temperature_c</definition>
        <argsstring>(k4a_capture_t capture_handle, float temperature_c)</argsstring>
        <name>k4a_capture_set_temperature_c</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <param>
          <type>float</type>
          <declname>temperature_c</declname>
        </param>
        <briefdescription>
<para>Set the temperature associated with the capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle to set the temperature on.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temperature_c</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature in Celsius to store.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="566" column="7" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="566" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group___functions_gacc45836ed4a9cd055c37f51ffca4f992_1gacc45836ed4a9cd055c37f51ffca4f992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float k4a_capture_get_temperature_c</definition>
        <argsstring>(k4a_capture_t capture_handle)</argsstring>
        <name>k4a_capture_get_temperature_c</name>
        <param>
          <type><ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref></type>
          <declname>capture_handle</declname>
        </param>
        <briefdescription>
<para>Get the temperature associated with the capture. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capture_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture handle to retrieve the temperature from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the temperature of the device at the time of the capture in Celsius. If the temperature is unavailable, the function will return NAN.</para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4a.h (include k4a/k4a.h)</requirement>
  <requirement name="Library">k4a.lib</requirement>
  <requirement name="DLL">k4a.dll</requirement>
</requirements>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" line="587" column="8" declfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4a.h" declline="587" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handle to an Azure Kinect capture. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>A capture represents a set of images that were captured by a device at approximately the same time. A capture may have a color, IR, and depth image. A capture may have up to one image of each type. A capture may have no image for a given type as well.</para>
</simplesect>
<simplesect kind="remark"><para>Captures also store a temperature value which represents the temperature of the device at the time of the capture.</para>
</simplesect>
<simplesect kind="remark"><para>While all the images associated with the capture were collected at approximately the same time, each image has an individual timestamp which may differ from each other. If the device was configured to capture depth and color images separated by a delay, <ref refid="group___functions_ga4dac757a33657f4d3dbf1ae8b21c158a_1ga4dac757a33657f4d3dbf1ae8b21c158a" kindref="member">k4a_device_get_capture()</ref> will return a capture containing both image types separated by the configured delay.</para>
</simplesect>
<simplesect kind="remark"><para>The capture will add a reference on any <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> that is added to it with one of the setters like <ref refid="group___functions_ga28824350a175d8eeba7c7a7d2753c2cf_1ga28824350a175d8eeba7c7a7d2753c2cf" kindref="member">k4a_capture_set_color_image()</ref>. If an existing image is being replaced, the previous image will have the reference released.</para>
</simplesect>
<simplesect kind="remark"><para>Once all references to the <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> are released, the capture will release the references it holds on any <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> that are associated with it.</para>
</simplesect>
<simplesect kind="remark"><para>When a capture returns an image to the caller with an accessor like <ref refid="group___functions_ga683e440b5f22215a2de58d7fa140488c_1ga683e440b5f22215a2de58d7fa140488c" kindref="member">k4a_capture_get_color_image()</ref>, a new reference is added to the <ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref> and the caller is responsible for releasing that reference with <ref refid="group___functions_ga27c81863b13fafc3934a32935a014e9f_1ga27c81863b13fafc3934a32935a014e9f" kindref="member">k4a_image_release()</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>Empty captures are created with <ref refid="group___functions_gaffbf32b4d014c31826d52de1c0c932cc_1gaffbf32b4d014c31826d52de1c0c932cc" kindref="member">k4a_capture_create()</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>Captures can be obtained from a device using <ref refid="group___functions_ga4dac757a33657f4d3dbf1ae8b21c158a_1ga4dac757a33657f4d3dbf1ae8b21c158a" kindref="member">k4a_device_get_capture()</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>The caller must call <ref refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" kindref="member">k4a_capture_release()</ref> to release its reference to any <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> that it receives from an Azure Kinect API.</para>
</simplesect>
<simplesect kind="remark"><para>Additional references to the capture may be obtained with <ref refid="group___functions_gab15293d2e452470fff8d5109472c7350_1gab15293d2e452470fff8d5109472c7350" kindref="member">k4a_capture_reference()</ref>.</para>
</simplesect>
<simplesect kind="remark"><para>An invalid <ref refid="structk4a__capture__t" kindref="compound">k4a_capture_t</ref> will be set to 0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="structk4a__image__t" kindref="compound">k4a_image_t</ref></para>
</simplesect>
 
<requirements>
  <requirement name="Header">k4atypes.h (include k4a/k4a.h)</requirement>
</requirements>
 </para>
    </detaileddescription>
    <location file="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4atypes.h" line="122" column="1" bodyfile="D:/Neal Analytics/Microsoft/Azure-Kinect-Sensor-SDK/include/k4a/k4atypes.h" bodystart="122" bodyend="122"/>
    <listofallmembers>
      <member refid="group___functions_gaffbf32b4d014c31826d52de1c0c932cc_1gaffbf32b4d014c31826d52de1c0c932cc" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_create</name></member>
      <member refid="group___functions_ga683e440b5f22215a2de58d7fa140488c_1ga683e440b5f22215a2de58d7fa140488c" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_get_color_image</name></member>
      <member refid="group___functions_gafa03513da96bf6b8c254fc11a04ee6d6_1gafa03513da96bf6b8c254fc11a04ee6d6" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_get_depth_image</name></member>
      <member refid="group___functions_ga1531c3fa76a7c174b8f2eab24de91794_1ga1531c3fa76a7c174b8f2eab24de91794" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_get_ir_image</name></member>
      <member refid="group___functions_gacc45836ed4a9cd055c37f51ffca4f992_1gacc45836ed4a9cd055c37f51ffca4f992" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_get_temperature_c</name></member>
      <member refid="group___functions_gab15293d2e452470fff8d5109472c7350_1gab15293d2e452470fff8d5109472c7350" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_reference</name></member>
      <member refid="group___functions_ga0ed6f74ec403c3eac1b8ef3afb32cee6_1ga0ed6f74ec403c3eac1b8ef3afb32cee6" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_release</name></member>
      <member refid="group___functions_ga28824350a175d8eeba7c7a7d2753c2cf_1ga28824350a175d8eeba7c7a7d2753c2cf" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_set_color_image</name></member>
      <member refid="group___functions_gad28b520b45096dd430d2a14b6052ebae_1gad28b520b45096dd430d2a14b6052ebae" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_set_depth_image</name></member>
      <member refid="group___functions_ga473abb7de733bf5f53329f3b1a86594c_1ga473abb7de733bf5f53329f3b1a86594c" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_set_ir_image</name></member>
      <member refid="group___functions_ga262b1df45e7b33dd4ea95e81d52a3a9c_1ga262b1df45e7b33dd4ea95e81d52a3a9c" prot="public" virt="non-virtual"><scope>k4a_capture_t</scope><name>k4a_capture_set_temperature_c</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
